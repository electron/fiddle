// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getSubsetOnly() renders 1`] = `
Array [
  <span
    className="bp3-icon bp3-icon-help"
    icon="help"
    style={
      Object {
        "float": "left",
        "margin": "0 10px 0 0",
      }
    }
  >
    <svg
      data-icon="help"
      height={40}
      viewBox="0 0 20 20"
      width={40}
    >
      <desc>
        help
      </desc>
      <path
        d="M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM7.41 4.62c.65-.54 1.51-.82 2.56-.82.54 0 1.03.08 1.48.25.44.17.83.39 1.14.68.32.29.56.63.74 1.02.17.39.26.82.26 1.27s-.08.87-.24 1.23c-.16.37-.4.73-.71 1.11l-1.21 1.58c-.14.17-.28.33-.32.48-.05.15-.11.35-.11.6v.97H9v-2s.06-.58.24-.81l1.21-1.64c.25-.3.41-.56.51-.77s.14-.44.14-.67c0-.35-.11-.63-.32-.85s-.5-.33-.88-.33c-.37 0-.67.11-.89.33-.22.23-.37.54-.46.94-.03.12-.11.17-.23.16l-1.95-.29c-.12-.01-.16-.08-.14-.22.13-.93.52-1.67 1.18-2.22zM9 14h2.02L11 16H9v-2z"
        fillRule="evenodd"
        key="0"
      />
    </svg>
  </span>,
  <p
    className="bp3r-running-text"
  >
    The 
    <code>
      app
    </code>
     module controls the app's application life-cycle. Most of the events and methods available on this module are responsible for handling how your interacts with the operating system or to set application-wide settings.
  </p>,
  <h3>
    API Demos
  </h3>,
  <p
    className="bp3-running-text"
  >
    The following demos display only a subset of what the
     
    <code>
      app
    </code>
    module is capable of. If you want to see its full abilities, check out the documentation on
     
    <a
      id="open-url"
      onClick={[Function]}
    >
      electronjs.org/docs/api/app
    </a>
    .
  </p>,
  <div
    className="bp3-callout bp3-callout-icon"
  >
    <span
      className="bp3-icon bp3-icon-eye-open"
      icon="eye-open"
    >
      <svg
        data-icon="eye-open"
        height={20}
        viewBox="0 0 20 20"
        width={20}
      >
        <desc>
          eye-open
        </desc>
        <path
          d="M10.01 7.984A2.008 2.008 0 008.012 9.99c0 1.103.9 2.006 1.998 2.006a2.008 2.008 0 001.998-2.006c0-1.103-.9-2.006-1.998-2.006zM20 9.96v-.03-.01-.02-.02a.827.827 0 00-.21-.442c-.64-.802-1.398-1.514-2.168-2.166-1.658-1.404-3.566-2.587-5.664-3.058a8.982 8.982 0 00-3.656-.05c-1.11.2-2.178.641-3.177 1.183-1.569.852-2.997 2.016-4.246 3.33-.23.25-.46.49-.67.761-.279.351-.279.773 0 1.124.64.802 1.4 1.514 2.169 2.166 1.658 1.404 3.566 2.577 5.664 3.058 1.209.271 2.438.281 3.656.05 1.11-.21 2.178-.651 3.177-1.193 1.569-.852 2.997-2.016 4.246-3.33.23-.24.46-.49.67-.751.11-.12.179-.271.209-.442v-.02-.02-.01-.03V10v-.04zM10.01 14A4.003 4.003 0 016.014 9.99a4.003 4.003 0 013.996-4.011 4.003 4.003 0 013.996 4.011 4.003 4.003 0 01-3.996 4.011z"
          fillRule="evenodd"
          key="0"
        />
      </svg>
    </span>
    <h4
      className="bp3-heading"
    >
      Hiding, Showing, Focussing
    </h4>
    <p>
      The app can ask the operating system for window focus. On macOS, it can additionally request that the app be hidden or shown. Give it a try: Click on the button below, focus another app, and wait for two seconds to see Electron Fiddle become the focused app again.
    </p>
    <button
      className="bp3-button"
      id="focus"
      onClick={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      type="button"
    >
      <span
        className="bp3-icon bp3-icon-lightbulb"
        icon="lightbulb"
      >
        <svg
          data-icon="lightbulb"
          height={16}
          viewBox="0 0 16 16"
          width={16}
        >
          <desc>
            lightbulb
          </desc>
          <path
            d="M9.01 14h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.44-1-1-1zm1-3h-4c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.44-1-1-1zm-2-11C5.26 0 3.03 1.95 3.03 4.35c0 2.37 1.63 2.64 1.94 5.22 0 .24.22.44.5.44h5.09c.28 0 .5-.19.5-.44C11.37 6.99 13 6.72 13 4.35 13 1.95 10.77 0 8.01 0z"
            fillRule="evenodd"
            key="0"
          />
        </svg>
      </span>
      <span
        className="bp3-button-text"
        key="text"
      >
        Focus Electron Fiddle
      </span>
    </button>
    Array [
      <p>
        This button hides Electron Fiddle right away, showing it again in two seconds.
      </p>,
      <button
        className="bp3-button"
        id="show-hide"
        onClick={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        type="button"
      >
        <span
          className="bp3-icon bp3-icon-eye-off"
          icon="eye-off"
        >
          <svg
            data-icon="eye-off"
            height={16}
            viewBox="0 0 16 16"
            width={16}
          >
            <desc>
              eye-off
            </desc>
            <path
              d="M16 7.97v-.02-.01-.02-.02a.672.672 0 00-.17-.36c-.49-.63-1.07-1.2-1.65-1.72l-3.16 2.26a2.978 2.978 0 01-2.98 2.9c-.31 0-.6-.06-.88-.15L5.09 12.3c.44.19.9.36 1.37.47.97.23 1.94.24 2.92.05.88-.17 1.74-.54 2.53-.98 1.25-.7 2.39-1.67 3.38-2.75.18-.2.37-.41.53-.62.09-.1.15-.22.17-.36v-.02-.02-.01-.02-.03c.01-.02.01-.03.01-.04zm-.43-4.17c.25-.18.43-.46.43-.8 0-.55-.45-1-1-1-.22 0-.41.08-.57.2l-.01-.01-2.67 1.91c-.69-.38-1.41-.69-2.17-.87a6.8 6.8 0 00-2.91-.05c-.88.18-1.74.54-2.53.99-1.25.7-2.39 1.67-3.38 2.75-.18.2-.37.41-.53.62-.23.29-.23.63-.01.92.51.66 1.11 1.25 1.73 1.79.18.16.38.29.56.44l-2.09 1.5.01.01c-.25.18-.43.46-.43.8 0 .55.45 1 1 1 .22 0 .41-.08.57-.2l.01.01 14-10-.01-.01zm-10.41 5a3.03 3.03 0 01-.11-.8 2.99 2.99 0 012.99-2.98c.62 0 1.19.21 1.66.53L5.16 8.8z"
              fillRule="evenodd"
              key="0"
            />
          </svg>
        </span>
        <span
          className="bp3-button-text"
          key="text"
        >
          Hide Electron Fiddle
        </span>
      </button>,
    ]
  </div>,
  <div
    className="bp3-callout bp3-callout-icon"
  >
    <span
      className="bp3-icon bp3-icon-folder-open"
      icon="folder-open"
    >
      <svg
        data-icon="folder-open"
        height={20}
        viewBox="0 0 20 20"
        width={20}
      >
        <desc>
          folder-open
        </desc>
        <path
          d="M20 9c0-.55-.45-1-1-1H5c-.43 0-.79.27-.93.65h-.01l-3 8h.01c-.04.11-.07.23-.07.35 0 .55.45 1 1 1h14c.43 0 .79-.27.93-.65h.01l3-8h-.01c.04-.11.07-.23.07-.35zM3.07 7.63C3.22 7.26 3.58 7 4 7h14V5c0-.55-.45-1-1-1H8.41l-1.7-1.71A.997.997 0 006 2H1c-.55 0-1 .45-1 1v12.31l3.07-7.68z"
          fillRule="evenodd"
          key="0"
        />
      </svg>
    </span>
    <h4
      className="bp3-heading"
    >
      Paths
    </h4>
    <p>
      Need to query information about various paths in a cross-platform manner? Electron can help. The button queries the operating system for some of them.
    </p>
    <button
      className="bp3-button"
      id="special-paths"
      onClick={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      type="button"
    >
      <span
        className="bp3-icon bp3-icon-play"
        icon="play"
      >
        <svg
          data-icon="play"
          height={16}
          viewBox="0 0 16 16"
          width={16}
        >
          <desc>
            play
          </desc>
          <path
            d="M12 8c0-.35-.19-.64-.46-.82l.01-.02-6-4-.01.02A.969.969 0 005 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 6-4-.01-.02c.27-.18.46-.47.46-.82z"
            fillRule="evenodd"
            key="0"
          />
        </svg>
      </span>
      <span
        className="bp3-button-text"
        key="text"
      >
        Get special directory paths
      </span>
    </button>
    <pre
      id="special-paths-content"
    />
  </div>,
  <div
    className="bp3-callout bp3-callout-icon"
  >
    <span
      className="bp3-icon bp3-icon-pulse"
      icon="pulse"
    >
      <svg
        data-icon="pulse"
        height={20}
        viewBox="0 0 20 20"
        width={20}
      >
        <desc>
          pulse
        </desc>
        <path
          d="M19 10h-2.38L14.9 6.55h-.01c-.17-.32-.5-.55-.89-.55-.43 0-.79.28-.93.66h-.01l-2.75 7.57L7.98 1.82h-.02A.978.978 0 007 1c-.44 0-.8.29-.94.69h-.01L3.28 10H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.44 0 .8-.29.94-.69h.01l1.78-5.34 2.29 12.21h.02c.08.46.47.82.96.82.43 0 .79-.28.93-.66h.01l3.21-8.82.96 1.92h.01c.16.33.49.56.88.56h3c.55 0 1-.45 1-1s-.45-1-1-1z"
          fillRule="evenodd"
          key="0"
        />
      </svg>
    </span>
    <h4
      className="bp3-heading"
    >
      Process & Device Information
    </h4>
    <p>
      Need to query information about the process or system? The
       
      <code>
        app
      </code>
       module lets developers query for information about the running app, hardware, and operating system. A good example are process metrics.
    </p>
    <button
      className="bp3-button"
      id="process-metrics"
      onClick={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      type="button"
    >
      <span
        className="bp3-icon bp3-icon-play"
        icon="play"
      >
        <svg
          data-icon="play"
          height={16}
          viewBox="0 0 16 16"
          width={16}
        >
          <desc>
            play
          </desc>
          <path
            d="M12 8c0-.35-.19-.64-.46-.82l.01-.02-6-4-.01.02A.969.969 0 005 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 6-4-.01-.02c.27-.18.46-.47.46-.82z"
            fillRule="evenodd"
            key="0"
          />
        </svg>
      </span>
      <span
        className="bp3-button-text"
        key="text"
      >
        Get process metrics
      </span>
    </button>
    <pre
      id="process-metrics-content"
    />
  </div>,
  <br />,
  <p
    className="b3-running-text"
  >
    For more documentation, visit
     
    <a
      id="open-url"
      onClick={[Function]}
    >
      electronjs.org/docs
    </a>
    , where you can find the full documentation for Electron.
  </p>,
  <p
    className="bp3-text-muted"
  >
    By the way, Electron Fiddle and the documentation you see here is entirely open source. If you have ideas on how to improve it, we'd love to have your contributions! You can find the repository on
     
    <a
      id="open-github"
      onClick={[Function]}
    >
      GitHub
    </a>
    .
  </p>,
]
`;
